apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tts-app
      app.kubernetes.io/component: tts-app
      app.kubernetes.io/instance: tts-app
    name: tts-app
    namespace: ritlab
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deployment: tts-app
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"tts-app:dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"tts-app\")].image"}]'
    labels:
      app: tts-app
      app.kubernetes.io/component: tts-app
      app.kubernetes.io/instance: tts-app
    name: tts-app
    namespace: ritlab
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: tts-app
    template:
      metadata:
        labels:
          deployment: tts-app
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/ritlab/tts-app@sha256:824b6f8506afc7a88cf6cb52daf34f610fee593078be3c560e0d1210f2b3106b
          imagePullPolicy: IfNotPresent
          name: tts-app
          ports:
          - containerPort: 3000
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: tts-app
      app.kubernetes.io/component: tts-app
      app.kubernetes.io/instance: tts-app
    name: tts-web-app
    namespace: ritlab
  spec:
    host: tts-web-app-ritlab.apps-crc.testing
    port:
      targetPort: 3000
    to:
      kind: Service
      name: tts-app
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - host: tts-web-app-ritlab.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
